/**
 * @warn DO NOT USE ME UNTIL ROUTER IS COMPLETE.
 */
import * as React from 'react';
import { TouchableWithoutFeedback, View, Text, Image, } from 'react-native';
import styles from './styles';
// function fixPagePath (pagePath) {
//   return pagePath.replace(/^\.?\//, '')
// }
class Tabbar extends React.Component {
    constructor(props) {
        super(props);
        this.onPress = (index) => {
        };
        const list = props.conf.list;
        if (!(list instanceof Array) ||
            list.length < 2 ||
            list.length > 5) {
            throw new Error('tabBar 配置错误');
        }
        // this.homePage = fixPagePath(props.homePage)
        this.state = {
            list,
            isShow: true,
            selectedIndex: 0
        };
    }
    hideBar() {
        this.setState({ isShow: false });
    }
    showBar() {
        this.setState({ isShow: true });
    }
    render() {
        const { conf, } = this.props;
        return this.state.isShow && (React.createElement(View, { style: [
                styles.bar, {
                    borderTopColor: conf.borderStyle || '#F7F7FA',
                    backgroundColor: conf.backgroundColor
                }
            ] }, this.state.list.map((item, index) => {
            const isActive = this.state.selectedIndex === index;
            const itemActiveStyle = isActive && {
                backgroundColor: '#EAEAEA'
            };
            const textActiveStyle = {
                color: isActive ? conf.selectedColor : conf.color
            };
            return (React.createElement(TouchableWithoutFeedback, { key: index, onPress: this.onPress.bind(this, index) },
                React.createElement(View, { style: [styles.barItem, itemActiveStyle] },
                    React.createElement(Image, { source: { uri: isActive ? item.selectedIconPath : item.iconPath }, style: styles.barItemIcon }),
                    React.createElement(Text, { style: [styles.barItemLabel, textActiveStyle] }, item.text))));
        })));
    }
}
Tabbar.defaultProps = {
    homePage: ''
};
export default Tabbar;
