/**
 * 其中一点小小不同：
 * selector 跟 multiSelector 实现过程中有点区别，state.value 存的是索引，而 multiSelector 存的是 value 值
 */
import * as React from 'react';
import AntPicker from '@ant-design/react-native/lib/picker';
import { noop } from '../../utils';
function convertToObj(item, rangeKey = '') {
    if (typeof item === 'object') {
        return { value: item[rangeKey], label: item[rangeKey] };
    }
    else {
        return { value: item, label: item };
    }
}
export default class Selector extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            pRange: [],
            range: [],
            value: 0,
        };
        this.onChange = () => {
            const { onChange = noop } = this.props;
            const { value } = this.state;
            onChange({ detail: { value } });
        };
        this.onPickerChange = (value) => {
            const { range } = this.state;
            let selectedIndex = 0;
            for (let i = 0; i < range.length; i++) {
                if (range[i].value === value[0]) {
                    selectedIndex = i;
                    break;
                }
            }
            this.setState({ value: selectedIndex });
        };
        this.onDismiss = () => {
            const { onCancel = noop } = this.props;
            onCancel();
        };
    }
    static getDerivedStateFromProps(nextProps, lastState) {
        let ret = null;
        if (nextProps.range !== lastState.pRange) {
            ret = {
                pRange: nextProps.range,
                range: (nextProps.range || []).map((item) => {
                    return convertToObj(item, nextProps.rangeKey);
                })
            };
        }
        if (nextProps.value !== lastState.value) {
            ret = ret || {};
            ret.value = nextProps.value;
        }
        return ret;
    }
    render() {
        const { children, disabled, } = this.props;
        const { range, value, } = this.state;
        const selected = range[value];
        return (React.createElement(AntPicker, { data: range, value: [selected && selected.value], cols: 1, onChange: this.onChange, onPickerChange: this.onPickerChange, onDismiss: this.onDismiss, disabled: disabled }, children));
    }
}
Selector.defaultProps = {
    range: [],
    value: 0,
};
